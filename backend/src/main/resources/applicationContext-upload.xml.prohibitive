<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security-4.0.xsd"
>
    <context:component-scan base-package="com.funeral.upload.service" />
    <context:component-scan base-package = "com.funeral.upload.filter"/>

    <!--&lt;!&ndash;MapperScannerConfigurer 自动扫描需要实例化的Dao层 &ndash;&gt;-->
    <!--<bean class = "org.mybatis.spring.mapper.MapperScannerConfigurer">-->
        <!--<property name="basePackage" value = "com.sicilin.tms.data.manager.dao"/>-->
        <!--<property name="sqlSessionFactoryBeanName" value = "sqlSessionFactory"/>-->
    <!--</bean>-->


    <bean id = "springSecurityFilter" class="org.springframework.security.web.FilterChainProxy">
        <security:filter-chain-map>
            <security:filter-chain pattern="/controller/**.login" filters="loginFilter"/>


            <!--全局的filter配置配置在这里反而更麻烦，将它挪到web.xml中-->
            <!--<security:filter-chain pattern="/**" filters="encodingFilter"/>-->
        </security:filter-chain-map>
    </bean>
</beans>